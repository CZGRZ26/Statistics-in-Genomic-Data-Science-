#Dependencies
#This document depends on the following packages:

  library(devtools)
  library(Biobase)

#To install these packages you can use the code (or if you are compiling the document, remove the eval=FALSE from the chunk.)

install.packages(c("devtools"))
source("http://www.bioconductor.org/biocLite.R")
biocLite(c("Biobase"))

General principles
#Can we find patterns in matrices of data?

#Load some data
#We will use this expression set that combines two studies Transcriptome genetics using second generation sequencing in a Caucasian population. and Understanding mechanisms underlying human gene expression variation with RNA sequencing.
#These studies are different populations but we counted the same genes for both. Then we’ll explore the differences.

con =url("http://bowtie-bio.sourceforge.net/recount/ExpressionSets/montpick_eset.RData")
load(file=con)
close(con)
mp = montpick.eset
pdata=pData(mp)
edata=as.data.frame(exprs(mp))
fdata = fData(mp)
ls()

#Calculate the singular vectors
#Here we calculate the singular vectors:

edata = edata[rowMeans(edata) > 100, ]
edata = log2(edata + 1)
edata_centered = edata - rowMeans(edata)
svd1 = svd(edata_centered)
names(svd1)

#Look at the percent variance explained
#The percent of variance explained is given by (dii)/(∑jd(2/jj))

plot(svd1$d,ylab="Singular value",col=2)

plot(svd1$d^2/sum(svd1$d^2),ylab="Percent Variance Explained",col=2)

#Plot top two principal components
par(mfrow=c(1,2))
plot(svd1$v[,1],col=2,ylab="1st PC")
plot(svd1$v[,2],col=2,ylab="2nd PC")

#Plot PC1 vs. PC2
#A very common plot is to plot PC1 versus PC2 to see if you can see any “clusters” or “groups”.

plot(svd1$v[,1],svd1$v[,2],col=2,ylab="2nd PC",xlab="1st PC")

#One thing you can do is color them by different variables to see if clusters stand out.

plot(svd1$v[,1],svd1$v[,2],ylab="2nd PC",
     xlab="1st PC",col=as.numeric(pdata$study))

#Another common plot is to make boxplots comparing the PC for different levels of known covariates (don’t forget to show the actual data!).

boxplot(svd1$v[,1] ~ pdata$study,border=c(1,2))
points(svd1$v[,1] ~ jitter(as.numeric(pdata$study)),col=as.numeric(pdata$study))

#PCs versus SVs
#What we have been plotting is not exactly the principal components.

pc1 = prcomp(edata)
plot(pc1$rotation[,1],svd1$v[,1])

#To get the actual PCs you have to subtract the column means rather than the row means when normalizing.

edata_centered2 = t(t(edata) - colMeans(edata))
svd2 = svd(edata_centered2)
plot(pc1$rotation[,1],svd2$v[,1],col=2)

#Despite this, it is most common for people to perform row-centering and then plot the singular vectors (sometimes labeling them PCs like I have done in this document)

#Outliers
#What happens if we introduce a single outlying gene

edata_outlier = edata_centered
edata_outlier[1,] = edata_centered[1,] * 10000
svd3 = svd(edata_outlier)
par(mfrow=c(1,2))
plot(svd1$v[,1],col=1,main="Without outlier")
plot(svd3$v[,1],col=2,main="With outlier")

#It turns out the new top singular vector is perfectly correlated with the outlying gene

plot(svd3$v[,1],edata_outlier[1,],col=4)

